apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.jiang.thinkindler"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    tasks.whenTaskAdded { task ->
        if (task.name.contains("lint")
//如果instant run不生效，把clean这行干掉
                || task.name.equals("clean")
                //如果项目中有用到aidl则不可以舍弃这个任务
                || task.name.contains("Aidl")
//用不到测试的时候就可以先关闭
                || task.name.contains("mockableAndroidJar")
                || task.name.contains("UnitTest")
                || task.name.contains("AndroidTest")
//用不到NDK和JNI的也关闭掉
                || task.name.contains("Ndk")
                || task.name.contains("Jni")
        ) {
            task.enabled = false
        }
    }

    greendao {
        schemaVersion 1
        daoPackage 'com.jiang.thinkindler.gen'
        targetGenDir 'src/main/java'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"

    compile "com.google.guava:guava:$rootProject.guavaVersion"

    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta1'
    testCompile "junit:junit:$rootProject.junitVersion"
    compile project(path: ':common')

    //内存泄漏监控
    debugCompile "com.squareup.leakcanary:leakcanary-android:$rootProject.leakcanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanaryVersion"

    leakcanaryVersion
    //dagger2
    provided 'org.glassfish:javax.annotation:10.0-b28'
    compile 'com.google.dagger:dagger:2.10-rc2'
    apt 'com.google.dagger:dagger-compiler:2.10-rc2'
    /*网络请求retrofit*/
    compile 'com.google.code.gson:gson:2.4'
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.retrofitVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"
    compile "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    compile 'com.github.franmontiel:PersistentCookieJar:v1.0.0'

    //视图绑定 butterknife
    compile "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    apt "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    //    orm
    compile "org.greenrobot:greendao:$rootProject.greendaoVersion"
    compile "org.greenrobot:greendao-generator:$rootProject.greendaoVersion"

//    rx
    compile "io.reactivex:rxjava:$rootProject.rxjavaVersion"
    compile "io.reactivex:rxandroid:$rootProject.rxandroidVersion"

}